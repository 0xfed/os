package:
  name: kubeflow-pipelines
  version: 2.0.1
  epoch: 0
  description: Machine Learning Pipelines for Kubeflow
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - wolfi-base
      - busybox
      - ca-certificates-bundle
      - build-base
      - go
      - go-licenses
      - git
      - argo-cd
      - python3-dev
      - py3-setuptools
      - py3-pip

data:
  - name: backends-go-builds
    items:
      apiserver: apiserver;apiserver
      persistence_agent: persistence_agent;agent/persistence
      cache_server: cache_server;cache
      scheduledworkflow: swf;crd/controller/scheduledworkflow
      viewer-crd-controller: viewer;crd/controller/viewer

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubeflow/pipelines
      tag: sdk-${{package.version}}
      expected-commit: 6dfcd533f495bf19019bb09baf5ec0d3775e0f1c

subpackages:
  - range: backends-go-builds
    name: "kubeflow-pipelines-${{range.key}}"
    description: "Kubeflow Pipelines ${{range.key}}"
    pipeline:
      - runs: |
          cd backend
          # Remediate GHSA-p782-xgp4-8hr8
          go get golang.org/x/sys@v0.0.0-20220811171246-fbc7d0a398ab

          # Mitigate GHSA-69ch-w2m2-3vjp
          go get golang.org/x/text@v0.9.0
          # GHSA-vvpx-j8f3-3w6h
          go get golang.org/x/net@v0.7.0

          go get golang.org/x/mod@v0.12.0

          # Mitigate GHSA-gwc9-m7rh-j2ww
          # Mitigate GHSA-8c26-wmh5-6g9v
          go get golang.org/x/crypto@1baeb1ce4c0b

          # GHSA-p782-xgp4-8hr8
          go get golang.org/x/sys@v0.8.0
          go mod tidy

          mkdir -p ${{targets.subpkgdir}}/usr/bin
          mkdir -p ${{targets.subpkgdir}}/third_party

          name=$(echo "${{range.value}}" | cut -d ';' -f 1)
          path=$(echo "${{range.value}}" | cut -d ';' -f 2-)

          make build/$name
          install -Dm644 ./build/$name ${{targets.subpkgdir}}/usr/bin/${{range.key}}

          go-licenses check ./src/$path
          go-licenses csv ./src/$path > ${{targets.subpkgdir}}/third_party/$name.csv
          go-licenses save ./src/$path --save_path ${{targets.subpkgdir}}/third_party/NOTICES

          if [ "${name}" == "apiserver" ]; then
            mkdir -p ${{targets.subpkgdir}}/samples
            pip3 install -r requirements.txt --no-cache-dir
            cp -r ../samples/* ${{targets.subpkgdir}}/samples
            cp ./src/$path/config/sample_config.json ${{targets.subpkgdir}}/samples/sample_config.json
          fi

update:
  enabled: true
  github:
    identifier: kubeflow/pipelines
    strip-prefix: "sdk-"
