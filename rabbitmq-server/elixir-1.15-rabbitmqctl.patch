From 8efc71eb9f2ab20a8b29399ab0d36028e0390fed Mon Sep 17 00:00:00 2001
From: Rin Kuryloski <kuryloskip@vmware.com>
Date: Tue, 27 Jun 2023 15:56:58 +0200
Subject: [PATCH] Fix rabbitmqctl compilation under elixir 1.15.x

---
 deps/rabbitmq_cli/lib/rabbit_common/records.ex           | 4 ++++
 deps/rabbitmq_cli/lib/rabbitmq/cli/core/listeners.ex     | 5 +++++
 deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/csv.ex     | 4 ++++
 .../lib/rabbitmq/cli/formatters/pretty_table.ex          | 4 ++++
 deps/rabbitmq_cli/mix.exs                                | 9 +++++----
 deps/rabbitmq_cli/rabbitmqctl.bzl                        | 5 -----
 6 files changed, 22 insertions(+), 9 deletions(-)

diff --git a/deps/rabbitmq_cli/lib/rabbit_common/records.ex b/deps/rabbitmq_cli/lib/rabbit_common/records.ex
index 512f8722b72..e3ec0d10e90 100644
--- a/deps/rabbitmq_cli/lib/rabbit_common/records.ex
+++ b/deps/rabbitmq_cli/lib/rabbit_common/records.ex
@@ -8,6 +8,10 @@ defmodule RabbitCommon.Records do
   require Record
   import Record, only: [defrecord: 2, extract: 2]
 
+  # Elixir 1.15 compiler optimizations require that we explicitly
+  # add the rabbit_common code path
+  :true = :code.add_path(:filename.join(:os.getenv(~c"DEPS_DIR"), ~c"rabbit_common/ebin"))
+
   # Important: amqqueue records must not be used directly since they are versioned
   #            for mixed version cluster compatibility. Convert records
   #            to maps on the server end to access the fields of those records. MK.
diff --git a/deps/rabbitmq_cli/lib/rabbitmq/cli/core/listeners.ex b/deps/rabbitmq_cli/lib/rabbitmq/cli/core/listeners.ex
index 374d12b22a1..726bd940494 100644
--- a/deps/rabbitmq_cli/lib/rabbitmq/cli/core/listeners.ex
+++ b/deps/rabbitmq_cli/lib/rabbitmq/cli/core/listeners.ex
@@ -13,6 +13,11 @@ defmodule RabbitMQ.CLI.Core.Listeners do
   # API
   #
 
+  # Elixir 1.15 compiler optimizations require that we explicitly
+  # add the public_key code path
+  [public_key] = :filelib.wildcard(:filename.join(:code.lib_dir(), ~c"public_key-*/ebin"))
+  :true = :code.add_path(public_key)
+
   defrecord :certificate,
             :Certificate,
             extract(:Certificate, from_lib: "public_key/include/public_key.hrl")
diff --git a/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/csv.ex b/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/csv.ex
index f8980139bfa..522560db5aa 100644
--- a/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/csv.ex
+++ b/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/csv.ex
@@ -94,6 +94,10 @@ defmodule RabbitMQ.CLI.Formatters.Csv do
   end
 end
 
+  # Elixir 1.15 compiler optimizations require that we explicitly
+  # add the csv code path
+  :true = :code.add_path(:filename.join([~c"_build", Atom.to_charlist(Mix.env()), ~c"lib/csv/ebin"]))
+
 defimpl CSV.Encode, for: PID do
   def encode(pid, env \\ []) do
     FormatterHelpers.format_info_item(pid)
diff --git a/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/pretty_table.ex b/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/pretty_table.ex
index 9351bcc2692..c07fc60a7c2 100644
--- a/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/pretty_table.ex
+++ b/deps/rabbitmq_cli/lib/rabbitmq/cli/formatters/pretty_table.ex
@@ -12,6 +12,10 @@ defmodule RabbitMQ.CLI.Formatters.PrettyTable do
   require Record
   import Record
 
+  # Elixir 1.15 compiler optimizations require that we explicitly
+  # add the stdout_formatter code path
+  :true = :code.add_path(:filename.join(:os.getenv(~c"DEPS_DIR"), ~c"stdout_formatter/ebin"))
+
   defrecord :table,
             extract(:table,
               from_lib: "stdout_formatter/include/stdout_formatter.hrl"
diff --git a/deps/rabbitmq_cli/mix.exs b/deps/rabbitmq_cli/mix.exs
index e1ac334d123..28710d2cd3a 100644
--- a/deps/rabbitmq_cli/mix.exs
+++ b/deps/rabbitmq_cli/mix.exs
@@ -135,6 +135,7 @@ defmodule RabbitMQCtl.MixfileBase do
     end
 
     make_cmd = System.get_env("MAKE", "make")
+    fake_cmd = "true"
     is_bazel = System.get_env("IS_BAZEL") != nil
 
     [
@@ -149,17 +150,17 @@ defmodule RabbitMQCtl.MixfileBase do
       {
         :stdout_formatter,
         path: Path.join(deps_dir, "stdout_formatter"),
-        compile: if(is_bazel, do: false, else: make_cmd)
+        compile: if(is_bazel, do: fake_cmd, else: make_cmd)
       },
       {
         :observer_cli,
         path: Path.join(deps_dir, "observer_cli"),
-        compile: if(is_bazel, do: false, else: make_cmd)
+        compile: if(is_bazel, do: fake_cmd, else: make_cmd)
       },
       {
         :rabbit_common,
         path: Path.join(deps_dir, "rabbit_common"),
-        compile: if(is_bazel, do: false, else: make_cmd),
+        compile: if(is_bazel, do: fake_cmd, else: make_cmd),
         override: true
       }
     ] ++
@@ -185,7 +186,7 @@ defmodule RabbitMQCtl.MixfileBase do
             {
               :amqp_client,
               path: Path.join(deps_dir, "amqp_client"),
-              compile: if(is_bazel, do: false, else: make_cmd),
+              compile: if(is_bazel, do: fake_cmd, else: make_cmd),
               override: true
             }
           ]
