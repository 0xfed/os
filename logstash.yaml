# Logstash is a bit of a behemoth becuase of the way the plugin system works.
# Usually, patched plugins would be dropped on the filesystem as APK's and the
# application could just pick them up. Logstash's plugin system requires the
# plugins to be added by the logstash-plugin cli tool since it uses a generated
# Gemfile.
#
# In order to patch plugins we can do a few things
#
# 1. If the plugin is a default plugin, patch it out of the plugins-metadata.json
#    file so the upstream plugin is not installed. Add the plugin apk to the build
#    environment and use logstash-plugin to install the .gem file before packaging
#    the dist into a tarball (and eventually apk). All of this should be done in
#    the main pipeline so the changes are picked up by all subpackages.
#
# 2. If the plugin is not a default plugin, do the same as above, but in a
#    subpackage to be installed separately.
package:
  name: logstash
  version: 8.12.1
  epoch: 5
  description: Logstash - transport and process your logs, events, or other data
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash # some helper scripts use bash
      - openjdk-11-jre

environment:
  contents:
    packages:
      - bash
      - busybox
      - ca-certificates-bundle
      - curl
      - gradle
      - jq
      # logstash plugins to load at build-time
      - logstash-integration-jdbc
      - logstash-output-opensearch
      # end logstash plugins to load at build-time
      - openjdk-11
      - openjdk-11-default-jvm
  environment:
    OSS: "true"
    LOGSTASH_SOURCE: "1"
    LANG: en_US.UTF-8
    JAVA_HOME: /usr/lib/jvm/default-jvm
    LS_JAVA_HOME: /usr/lib/jvm/default-jvm
    LS_DESTINATION: usr/share/logstash
    MAVEN_OPTS: "-Dmaven.repo.local=/var/cache/melange"
    GRADLE_USER_HOME: "/var/cache/melange"
    GRADLE_OPTS: "-Dorg.gradle.caching=true"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/elastic/logstash
      tag: v${{package.version}}
      expected-commit: c7e185a56af665671d38ad8dbf37bb5817f50678

  - name: Patch sources
    runs: |
      # Disable the logstash-integration-jdbc plugin download as we build and package it separately
      jq 'del(.["logstash-integration-jdbc"])' rakelib/plugins-metadata.json > /tmp/plugins-metadata.json
      mv /tmp/plugins-metadata.json rakelib/

      # Disable -Werror which means that warnings are not treated as errors during compilation.  Required for Java 21.
      sed -i '/options.compilerArgs.add("-Werror")/s/^/\/\//' build.gradle

      # A hack-fix to tackle with `Could not find method enabled() for arguments [true] on Report xml` error starting after 8.11.x.
      sed -i '/enabled/d' logstash-core/build.gradle

  - name: Install all the proper gems and build the tarball dist
    runs: |
      ./gradlew installDevelopmentGems
      ./gradlew installDefaultGems

  - name: Re-inject default plugins that have been patched
    runs: |
      bin/logstash-plugin install $(find / -type f -name "logstash-integration-jdbc-*.gem")

  - name: Patch out the windows and mac tarball creation
    uses: patch
    with:
      patches: create_archive_pack.patch

  - name: Build tarball distribution
    runs: |
      ./gradlew assembleOssTarDistribution -Pjdk_bundle_os=linux --stacktrace

  - name: Package distribution
    runs: |
      mkdir -p ${{targets.contextdir}}/${LS_DESTINATION}
      tar --strip-components 1 \
        -C ${{targets.contextdir}}/${LS_DESTINATION} \
        -xf $(find . -type f -name "logstash-oss-${{package.version}}-SNAPSHOT-no-jdk.tar.gz")

      mkdir -p ${{targets.contextdir}}/usr/bin/$name
      for i in ${{targets.contextdir}}/${LS_DESTINATION}/bin/*; do
        name=$(basename $i)
        ln -sf /${LS_DESTINATION}/bin/$name ${{targets.contextdir}}/usr/bin/$name
      done

  - name: Patch CVEs
    runs: |
      # Hack-fix to reduce CVE count: https://github.com/elastic/logstash/pull/3855
      rm -rf ${{targets.contextdir}}/${LS_DESTINATION}/vendor/bundle/jruby/*/gems/ruby-maven-libs-*/maven-home/lib

  - runs: |
      src=docker/data/logstash
      dst="${{targets.contextdir}}/${LS_DESTINATION}"
      mkdir -p "${dst}/config" \
               "${dst}/pipeline" \
               "${{targets.contextdir}}/usr/bin"

      cp "${src}/config/pipelines.yml"          "${dst}/config/pipelines.yml"
      cp "${src}/config/logstash-oss.yml"       "${dst}/config/logstash-oss.yml"
      cp "${src}/config/logstash-full.yml"      "${dst}/config/logstash-full.yml"
      cp "${src}/config/log4j2.file.properties" "${dst}/config/log4j2.file.properties"
      cp "${src}/config/log4j2.properties"      "${dst}/config/log4j2.properties"
      cp "${src}/pipeline/default.conf"         "${dst}/pipeline/default.conf"

      install -m755 "${src}/bin/docker-entrypoint" "${{targets.contextdir}}/usr/bin/docker-entrypoint"

subpackages:
  - name: ${{package.name}}-compat
    description: Compatibility with the upstream image
    pipeline:
      - runs: |
          src=docker/data/logstash
          dst="${{targets.contextdir}}/${LS_DESTINATION}"
          mkdir -p "${dst}/config" \
                   "${dst}/pipeline" \
                   "${{targets.contextdir}}/usr/bin"

          cp "${src}/config/pipelines.yml"          "${dst}/config/pipelines.yml"
          cp "${src}/config/logstash-oss.yml"       "${dst}/config/logstash-oss.yml"
          cp "${src}/config/logstash-full.yml"      "${dst}/config/logstash-full.yml"
          cp "${src}/config/log4j2.file.properties" "${dst}/config/log4j2.file.properties"
          cp "${src}/config/log4j2.properties"      "${dst}/config/log4j2.properties"
          cp "${src}/pipeline/default.conf"         "${dst}/pipeline/default.conf"

          install -m755 "${src}/bin/docker-entrypoint" "${{targets.contextdir}}/usr/bin/docker-entrypoint"

  - name: ${{package.name}}-with-output-opensearch
    description: Build logstash with logstash-output-opensearch plugin
    pipeline:
      - name: subpkg Re-inject default plugins that have been patched
        runs: |
          bin/logstash-plugin install $(find / -type f -name "logstash-output-opensearch-*.gem")
      - name: subpkg Build tarball distribution
        runs: |
          ./gradlew assembleOssTarDistribution -Pjdk_bundle_os=linux --stacktrace
      - name: subpkg package it all
        runs: |
          mkdir -p ${{targets.contextdir}}/${LS_DESTINATION}
          tar --strip-components 1 \
            -C ${{targets.contextdir}}/${LS_DESTINATION} \
            -xf $(find . -type f -name "logstash-oss-${{package.version}}-SNAPSHOT-no-jdk.tar.gz")

          mkdir -p ${{targets.contextdir}}/usr/bin/$name
          for i in ${{targets.contextdir}}/${LS_DESTINATION}/bin/*; do
            name=$(basename $i)
            ln -sf /${LS_DESTINATION}/bin/$name ${{targets.contextdir}}/usr/bin/$name
          done
      - name: subpkg fix vulns
        runs: |
          # Hack-fix to reduce CVE count: https://github.com/elastic/logstash/pull/3855
          rm -rf ${{targets.contextdir}}/${LS_DESTINATION}/vendor/bundle/jruby/*/gems/ruby-maven-libs-*/maven-home/lib
      - runs: |
          src=docker/data/logstash
          dst="${{targets.contextdir}}/${LS_DESTINATION}"
          mkdir -p "${dst}/config" \
                   "${dst}/pipeline" \
                   "${{targets.contextdir}}/usr/bin"

          cp "${src}/config/pipelines.yml"          "${dst}/config/pipelines.yml"
          cp "${src}/config/logstash-oss.yml"       "${dst}/config/logstash-oss.yml"
          cp "${src}/config/logstash-full.yml"      "${dst}/config/logstash-full.yml"
          cp "${src}/config/log4j2.file.properties" "${dst}/config/log4j2.file.properties"
          cp "${src}/config/log4j2.properties"      "${dst}/config/log4j2.properties"
          cp "${src}/pipeline/default.conf"         "${dst}/pipeline/default.conf"

          install -m755 "${src}/bin/docker-entrypoint" "${{targets.contextdir}}/usr/bin/docker-entrypoint"

  - name: ${{package.name}}-env2yaml
    description: Merge environment variables into logstash.yml
    pipeline:
      - working-directory: docker/data/logstash/env2yaml
        pipeline:
          - runs: |
              go mod init env2yaml
              go mod tidy
          - uses: go/build
            with:
              packages: .
              output: env2yaml
              ldflags: -s -w
              subpackage: "true"
      - uses: strip

test:
  environment:
    contents:
      packages:
        - wolfi-base
  pipeline:
    - runs: |
        echo "hello" | \
          logstash -e 'input { stdin { } } output { stdout {} }' | \
          grep 'message.*hello'

update:
  enabled: true
  github:
    identifier: elastic/logstash
    strip-prefix: v
    use-tag: true
