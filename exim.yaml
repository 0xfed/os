package:
  name: exim
  version: 4.97.1
  epoch: 1
  description: Message Transfer Agent
  copyright:
    - license: GPL-2.0-or-later
  checks:
    disabled:
      - setuidgid

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - gawk
      - libidn-dev
      - libspf2-dev
      - linux-headers
      - mariadb-10.11
      - mariadb-connector-c-dev
      - openssl-dev>3
      - pcre2-dev
      - perl
      - perl-file-fcntllock
      - postgresql-dev
      - sqlite-dev
      - tdb
      - tdb-dev
      - wolfi-baselayout
  accounts:
    users:
      - username: exim
        uid: 1001

pipeline:
  - uses: fetch
    with:
      expected-sha256: bd782057509a793593508528590626d185ea160ce32cb34beda262e99cefdfa9
      uri: https://ftp.exim.org/pub/exim/exim4/exim-${{package.version}}.tar.xz

  - runs: |
      cp exim.Makefile Local/Makefile

      sed -i -e 's/^HAVE_ICONV.*$//' OS/Makefile-Linux

      # This is kind of hacky, but the makefile tests the binary and it won't run without a user configured
      make makefile
      make

  - runs: |
      install -m750 -D -g mail -d "${{targets.destdir}}"/etc/mail
      make DESTDIR="${{targets.destdir}}" INSTALL_ARG="-no_symlink -no_chown exim" install
      install -D -m644 doc/exim.8 "${{targets.destdir}}"/usr/share/man/man8/exim.8
      cd "${{targets.destdir}}"/usr/sbin
      mv exim-* exim
      chmod u+s exim
      for i in mailq rmail rsmtp runq sendmail newaliases; do
        ln -s exim $i
      done
      # Fix clamav local socket path, Add variant to spamd address
      sed -i \
        -e 's~# av_scanner = clamd:/tmp/clamd~# av_scanner = clamd:/run/clamav/clamd.sock~' \
        -e '/# spamd_address = 127.0.0.1 783/a# spamd_address = 127.0.0.1 11333 variant=rspamd' \
        "${{targets.destdir}}"/etc/${{package.name}}/${{package.name}}.conf
      # Create subdirs for logs and extensions
      install -dm750 -o ${{package.name}} -g mail "${{targets.destdir}}"/var/log/${{package.name}}
      mkdir -p "${{targets.destdir}}"/usr/lib/${{package.name}}

  - uses: strip

subpackages:

test:
  environment:
    contents:
      packages:
        - postgresql
        - postgresql-client
        - wolfi-base
        - shadow
        - sudo-rs
        - glibc-locales
    environment:
      PGDATA: /tmp/test_db
      PGUSER: wolfi
  pipeline:
    - name: "Test database creation"
      runs: |
        echo "Current user: $(whoami)"
        useradd $PGUSER
        sudo -u $PGUSER initdb -D /tmp/test_db
        sudo -u $PGUSER pg_ctl -D /tmp/test_db -l /tmp/logfile start
        sudo -u $PGUSER createdb testdb
        psql -lqt | cut -d \| -f 1 | grep -qw testdb
    - name: "Test basic read/write operations"
      runs: |
        sudo -u $PGUSER psql -d testdb -c "CREATE TABLE test_table (id SERIAL PRIMARY KEY, test_value VARCHAR(50));"
        sudo -u $PGUSER psql -d testdb -c "INSERT INTO test_table (test_value) VALUES ('Hello, PostgreSQL!');"
        sudo -u $PGUSER psql -d testdb -t -A -c "SELECT test_value FROM test_table WHERE id=1;"
    - name: "Test server can run and respond to requests"
      runs: |
        sudo -u $PGUSER psql -d testdb -c "\conninfo"
    - name: "Test exim extension is installed and working"
      runs: |
        # Exim is install test
        if ! command -v exim &> /dev/null; then
          echo "Exim is not installed."
          exit 1
        else
          echo "Exim is installed."
        fi

        # Send test email
        echo "This is a test email sent through Exim." | sudo -u $PGUSER exim -odf recipient@example.com

        # Test exim - db conection
        exim_db_test=$(sudo -u $PGUSER exim -be '${lookup pgsql{SELECT 1 FROM dual}}')
        if [ "$exim_db_test" == "1" ]; then
          echo "Exim successfully connected to PostgreSQL."
        else
          echo "Exim failed to connect to PostgreSQL."
          exit 1
        fi

update:
  enabled: true
  release-monitor:
    identifier: 768
