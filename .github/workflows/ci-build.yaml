name: CI build action

on:
  pull_request:
    branches: ['main']
  push:
    branches:
      - gh-readonly-queue/main/**

jobs:
  changes:
    name: Determine packages to test building
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.package-list.outputs.packages}}

    steps:
      - uses: actions/checkout@v3

      - name: Look for changed files
        id: changes
        uses: tj-actions/changed-files@v35
        with:
          files: ./*.yaml

      # Assuming that we have a list of changed files such as `foo.yaml` and `bar.yaml`, this
      # strips the list down into `foo` and `bar`.
      - name: Build package list
        id: package-list
        run: |
          printf "packages=" >> $GITHUB_OUTPUT

          for file in ${{ steps.changes.outputs.all_changed_files }}; do
            printf "%s " ${file%.yaml} >> $GITHUB_OUTPUT
          done

          printf "\n" >> $GITHUB_OUTPUT

  build:
    name: Test building of packages
    runs-on: ubuntu-16-core
    needs: changes

    permissions:
      packages: write
      contents: read

    steps:
      - name: Generate snapshot date
        id: snapshot-date
        run: |
          echo "date=$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "epoch=$(date -u +%s)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/checkout@v3

      - uses: chainguard-dev/actions/setup-melange@main

      - name: 'Generate local signing key'
        run: |
          make MELANGE="melange" local-melange.rsa

      - name: 'Build Wolfi'
        run: |
          for package in ${{needs.changes.outputs.packages}}; do
            make MELANGE="melange" MELANGE_DIR=/usr/share/melange MELANGE_EXTRA_OPTS="--create-build-log --keyring-append ${{ github.workspace }}/wolfi-signing.rsa.pub" REPO="${{ github.workspace }}/packages" BUILDWORLD=no packages/$package -j1
          done

      - name: Check for file
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check sonames
        id: soname
        if: steps.file_check.outputs.exists == 'true'
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: check so-name

      - name: Generate dependency svg
        id: svg
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: svg

      - uses: actions/upload-artifact@v3
        with:
          name: dag.svg
          path: dag.svg
